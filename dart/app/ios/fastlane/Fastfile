# Fastfile

default_platform(:ios)

platform :ios do
  desc "Build and distribute iOS app for Adhoc"
  lane :adhoc do    
    p12_base64 = ENV['REVIEW_CERTIFICATES']
    p12_password = ENV['REVIEW_CERTIFICATES_PASSWORD']
    File.write("certificate.p12", Base64.decode64(p12_base64))


    provisioning_profile_base64 = ENV['REVIEW_PROVISIONING_PROFILE']
    provisioning_profile_path = "Adhoc.mobileprovision"
    File.write(provisioning_profile_path, Base64.decode64(provisioning_profile_base64))

    sh("mkdir -p ~/Library/MobileDevice/Provisioning\\ Profiles/")
    sh("cp #{provisioning_profile_path} ~/Library/MobileDevice/Provisioning\\ Profiles/Adhoc.mobileprovision")

    create_keychain(
      name: "build.keychain",
      password: "",
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      lock_when_sleeps: false
    )

    current_time = Time.now.strftime("%Y%m%d%H%M")

    increment_build_number(
      build_number: current_time
      xcodeproj: "Runner.xcodeproj"
    )

    import_certificate(
      certificate_path: "certificate.p12",
      certificate_password: p12_password,
      keychain_name: "build.keychain"
    )

    # iOSビルド
    build_app(
      workspace: "Runner.xcworkspace",
      scheme: "Runner",
      export_options: {
        method: "ad-hoc",
        provisioningProfiles: {
          "com.unicorn.stockkeeper" => "Adhoc"
        },
        signingStyle: "manual"
      },
      clean: true,
      output_name: "app.ipa",
      output_directory: "build"
    )

    # Firebase App Distributionにアップロード
    firebase_app_distribution(
      app: ENV['REVIEW_FIREBASE_APP_ID'],
      firebase_cli_token: ENV['REVIEW_FIREBASE_CLI_TOKEN'],
      ipa_path: "build/app.ipa",
      groups: "testers"
    )

    delete_keychain(name: "build.keychain")
  end
end